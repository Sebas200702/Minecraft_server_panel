---
import '../styles/global.css';
import ServerControl from '../components/ServerControl.astro';
import SystemInfo from '../components/SystemInfo.astro';
import ServerLogs from '../components/ServerLogs.astro';
import ServerConsole from '../components/ServerConsole.astro';
import ServerIP from '../components/ServerIP.astro';
import OnlinePlayers from '../components/OnlinePlayers.astro';
---

<html lang="es">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Panel de Control - Servidor Minecraft</title>
		<link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">
	</head>
	<body class="bg-black min-h-screen text-white overflow-x-hidden"
	      style="background-image: radial-gradient(circle at 25% 25%, rgba(34, 197, 94, 0.1) 0%, transparent 25%), radial-gradient(circle at 75% 75%, rgba(16, 185, 129, 0.05) 0%, transparent 25%);">

		<!-- Header -->
		<header class="bg-black/30 backdrop-blur-sm border-b border-stone-700 sticky top-0 z-50 shadow-lg">
			<div class="max-w-7xl mx-auto px-4 py-4">
				<div class="flex items-center justify-between">
					<div class="flex items-center gap-4">
						<div class="text-4xl animate-bounce" style="filter: drop-shadow(0 0 10px rgba(34, 197, 94, 0.8));">
							ðŸŽ®
						</div>
						<div>
							<h1 class="text-2xl md:text-3xl font-bold text-green-400 mb-1"
							    style="font-family: 'Press Start 2P', cursive; text-shadow: 0 0 20px rgba(34, 197, 94, 0.8), 0 0 40px rgba(34, 197, 94, 0.4);">
								MINECRAFT PANEL
							</h1>
							<p class="text-gray-300 text-sm font-mono">
								Panel de AdministraciÃ³n del Servidor
							</p>
						</div>
					</div>


				</div>
			</div>
		</header>

		<!-- Main Dashboard -->
		<main class="max-w-7xl mx-auto px-4 py-8">
			<div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
				<!-- Server Control Panel -->
				<div class="transform xl:col-span-2  transition-transform duration-300"
				     style="animation: slideInLeft 0.8s ease-out;">
					<ServerControl />
				</div>
                <!-- Server IP -->
				<div class="transform  transition-transform duration-300 lg:col-span-2 xl:col-span-1"
                style="animation: slideInLeft 0.8s ease-out 0.4s both;">
               <ServerIP />
           </div>

				<!-- Online Players -->
				<div class="transform  transition-transform duration-300"
				     style="animation: slideInRight 0.8s ease-out 0.3s both;">
					<OnlinePlayers />
				</div>

				<!-- System Information -->
				<div class="transform xl:col-span-2  transition-transform duration-300"
				     style="animation: slideInRight 0.8s ease-out 0.2s both;">
					<SystemInfo />
				</div>



				<!-- Server Logs -->
				<div class="transform  transition-transform duration-300 lg:col-span-1 xl:col-span-2"
				     style="animation: slideInRight 0.8s ease-out 0.6s both;">
					<ServerLogs />
				</div>

				<!-- Server Console -->
				<div class="transform  transition-transform duration-300 lg:col-span-2 xl:col-span-1"
				     style="animation: slideInLeft 0.8s ease-out 0.8s both;">
					<ServerConsole />
				</div>
			</div>
		</main>

		<!-- Footer -->
		<footer class="mt-16 bg-black/30 backdrop-blur-sm border-t border-stone-700">
			<div class="max-w-7xl mx-auto px-4 py-6">
				<div class="text-center text-gray-400 font-mono">
					<p class="mb-2">
						ðŸš€ Panel de Control Minecraft - Desarrollado con
						<span class="text-green-400 font-semibold">Astro</span> +
						<span class="text-blue-400 font-semibold">Tailwind CSS</span>
					</p>
					<p class="text-sm">
						Conectado a: <span class="text-green-400 font-semibold">mancosfc.ddns.net:3001</span>
					</p>
				</div>
			</div>
		</footer>
	</body>
</html>

<script>
	import { minecraftAPI } from '../services/api.js';

	class DashboardManager {
		private globalStatusLight: HTMLElement | null;
		private globalStatusText: HTMLElement | null;

		constructor() {
			this.globalStatusLight = document.getElementById('global-status-light');
			this.globalStatusText = document.getElementById('global-status-text');

			this.initGlobalStatus();

			// Check global status every 30 seconds
			setInterval(() => this.checkGlobalStatus(), 30000);
		}

		async initGlobalStatus() {
			await this.checkGlobalStatus();
		}

		async checkGlobalStatus() {
			try {
				const healthResponse = await minecraftAPI.getHealth();

				if (healthResponse.success) {
					this.setGlobalStatus('online', 'Sistema Online');
				} else {
					this.setGlobalStatus('warning', 'Sistema con problemas');
				}
			} catch (error) {
				this.setGlobalStatus('offline', 'Sistema Offline');
			}
		}

		setGlobalStatus(status: string, text: string) {
			if (!this.globalStatusLight || !this.globalStatusText) return;

			this.globalStatusText.textContent = text;

			// Reset classes and apply new ones
			this.globalStatusLight.className = 'w-3 h-3 rounded-full animate-pulse';

			switch (status) {
				case 'online':
					this.globalStatusLight.classList.add('bg-green-500');
					this.globalStatusLight.style.boxShadow = '0 0 8px rgba(34, 197, 94, 0.7)';
					break;
				case 'warning':
					this.globalStatusLight.classList.add('bg-yellow-500');
					this.globalStatusLight.style.boxShadow = '0 0 8px rgba(234, 179, 8, 0.7)';
					break;
				case 'offline':
					this.globalStatusLight.classList.add('bg-red-500');
					this.globalStatusLight.style.boxShadow = '0 0 8px rgba(239, 68, 68, 0.7)';
					break;
			}
		}
	}

	// Initialize dashboard when DOM is loaded
	document.addEventListener('DOMContentLoaded', () => {
		new DashboardManager();
	});
</script>

<style>
	/* Animation keyframes */
	@keyframes slideInLeft {
		from {
			opacity: 0;
			transform: translateX(-100px);
		}
		to {
			opacity: 1;
			transform: translateX(0);
		}
	}

	@keyframes slideInRight {
		from {
			opacity: 0;
			transform: translateX(100px);
		}
		to {
			opacity: 1;
			transform: translateX(0);
		}
	}

	/* Global notification animations for other components */
	@keyframes slideInRight {
		from {
			opacity: 0;
			transform: translateX(100%);
		}
		to {
			opacity: 1;
			transform: translateX(0);
		}
	}

	@keyframes slideOutRight {
		from {
			opacity: 1;
			transform: translateX(0);
		}
		to {
			opacity: 0;
			transform: translateX(100%);
		}
	}
</style>
